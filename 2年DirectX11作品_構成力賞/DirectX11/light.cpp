//=============================================================================
//
// ライト処理 [light.cpp]
// Author : Yanagisawa Yuta
//
//=============================================================================
#include "main.h"
#include "renderer.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************



//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static LIGHT	g_Light[LIGHT_MAX];



//=============================================================================
// 初期化処理
//=============================================================================
void InitLight(void)
{

	//ライト初期化
	for (int i = 0; i < LIGHT_MAX; i++)
	{
		g_Light[i].Position = D3DXVECTOR4(0.0f, 0.0f, 0.0f, 0.0f);
		g_Light[i].Direction = D3DXVECTOR4(0.0f, -1.0f, 0.0f, 0.0f);
		g_Light[i].Diffuse   = D3DXCOLOR( 1.0f, 1.0f, 1.0f, 1.0f );
		g_Light[i].Ambient   = D3DXCOLOR( 0.0f, 0.0f, 0.0f, 0.0f );
		g_Light[i].Attenuation = 100.0f;	// 減衰距離
		g_Light[i].Type = LIGHT_TYPE_NONE;	// ライトのタイプ
		g_Light[i].Enable = false;			// ON / OFF
		SetLight(i, &g_Light[i]);
	}

}


//=============================================================================
// 更新処理
//=============================================================================
void UpdateLight(void)
{



}


//=============================================================================
// ライトの設定
// Typeによってセットするメンバー変数が変わってくる
//=============================================================================
void SetLightData(int index, LIGHT *light)
{
	SetLight(index, light);
}


LIGHT *GetLightData(int index)
{
	return(&g_Light[index]);
}

