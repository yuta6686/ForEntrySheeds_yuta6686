//=============================================================================
//
// リザルト画面処理 [result.cpp]
// Author : Yanagisawa Yuta
//

//=============================================================================
#include "result.h"
#include "input.h"
#include "texture.h"
#include "sprite.h"
#include "fade.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************



//*****************************************************************************
// グローバル変数
//*****************************************************************************
static int  g_Texture_GameClear = 0;
static int  g_Texture_GameOver = 0;
static bool g_IsClear = false;

//*****************************************************************************
//	関数
//*****************************************************************************
void SetIsClear(bool flag) { g_IsClear = flag; }

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitResult(void)
{
	g_Texture_GameClear = LoadTexture((char*)"data/TEXTURE/GameClear1.png");
	g_Texture_GameOver = LoadTexture((char*)"data/TEXTURE/GameOver1.png");

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void UninitResult(void)
{

}

//=============================================================================
// 更新処理
//=============================================================================
void UpdateResult(void)
{
	if (GetKeyboardTrigger(DIK_RETURN) ||
		IsMouseLeftTriggered()
		&& GetFadeState() == FADE_NONE)
	{
		SceneTransition(SCENE_TITLE);
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void DrawResult(void)
{
	// １枚のポリゴンの頂点とテクスチャ座標を設定
	if (g_IsClear) 
	{
		DrawSpriteLeftTop(g_Texture_GameClear, 0.0f, 0.0f, SCREEN_WIDTH, SCREEN_HEIGHT, 0.0f, 0.0f, 1.0f, 1.0f);
	}
	else 
	{
		DrawSpriteLeftTop(g_Texture_GameOver, 0.0f, 0.0f, SCREEN_WIDTH, SCREEN_HEIGHT, 0.0f, 0.0f, 1.0f, 1.0f);
	}
}
